// <auto-generated />
using System;
using CursoOnline.Domain.Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CursoOnline.Domain.Infra.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200601003152_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4");

            modelBuilder.Entity("CursoOnline.Domain.Entities.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .HasColumnType("vachar(11)");

                    b.Property<string>("Email")
                        .HasColumnType("vachar(200)");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("RefUser")
                        .HasColumnType("vachar(120)");

                    b.HasKey("Id");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("CursoOnline.Domain.Entities.Cartao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bandeira")
                        .HasColumnType("vachar(200)");

                    b.Property<int>("IdAluno")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Numero")
                        .HasColumnType("TEXT");

                    b.Property<string>("Validade")
                        .HasColumnType("vachar(10)");

                    b.HasKey("Id");

                    b.HasIndex("IdAluno");

                    b.ToTable("Cartao");
                });

            modelBuilder.Entity("CursoOnline.Domain.Entities.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("vachar(300)");

                    b.Property<string>("Nivel")
                        .HasColumnType("vachar(200)");

                    b.Property<string>("Titulo")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("CursoOnline.Domain.Entities.Matricula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdAluno")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCurso")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdAluno");

                    b.HasIndex("IdCurso");

                    b.ToTable("Matricula");
                });

            modelBuilder.Entity("CursoOnline.Domain.Entities.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.Property<int>("idAluno")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idCartao")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("idAluno");

                    b.HasIndex("idCartao");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("CursoOnline.Domain.Entities.Cartao", b =>
                {
                    b.HasOne("CursoOnline.Domain.Entities.Aluno", "Aluno")
                        .WithMany("Cartoes")
                        .HasForeignKey("IdAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CursoOnline.Domain.Entities.Matricula", b =>
                {
                    b.HasOne("CursoOnline.Domain.Entities.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("IdAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CursoOnline.Domain.Entities.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("IdCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CursoOnline.Domain.Entities.Pagamento", b =>
                {
                    b.HasOne("CursoOnline.Domain.Entities.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("idAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CursoOnline.Domain.Entities.Cartao", "Cartao")
                        .WithMany()
                        .HasForeignKey("idCartao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
